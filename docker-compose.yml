services:
#   nginx:
#     image: nginx:1.17
#     volumes:
#       - "./nginx/nginx.conf:/etc/nginx/conf.d/default.conf"
#     ports:
#       - "8000:80"
#     depends_on:
#       - backend
#       - mongo
#     restart: on-failure
  mongo:
    image: mongo:8.0
    container_name: MongoDB-ExpenseTracker
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - "c:/temp/expenseTracker/db:/data/db"
    ports:
      - "27017:${MONGO_PORT}"
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 20s
      timeout: 10s
      retries: 10


  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: FastAPI-ExpenseTracker
    ports:
      - "8000:8000"
    environment:
      - MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:${MONGO_PORT}/?authSource=admin
    depends_on:
      mongo:
        condition: service_healthy
    restart: on-failure
  
  # frontend:
  #   image: node:24
  #   user: node
  #   working_dir: /home/node/app
  #   volumes:
  #     - ./frontend:/home/node/app
  #   container_name: React-ExpenseTracker
  #   ports:
  #     - "3000:3000"
  #   expose:
  #     - "3000"
  #   environment:
  #     - NODE_ENV=development
  #     - WDS_SOCKET_PORT=0
  #   command: "npm start"
  #   restart: on-failure

volumes:
  mongo_data:

networks:
  default:
    driver: bridge
